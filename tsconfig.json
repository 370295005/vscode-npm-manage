{
  "include": ["src", "test", "types"],
  "compilerOptions": {
    "module": "commonjs",
    "target": "es6",
    "outDir": "out",
    "lib": ["es6", "esnext", "dom"],
    "jsx": "react",
    "sourceMap": true,
    "rootDir": "src",
    "declaration": false /* Generates corresponding '.d.ts' file. */,
    "declarationMap": false /* Generates a sourcemap for each corresponding '.d.ts' file. */,
    "importHelpers": true,
    "downlevelIteration": true /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */,
    "noImplicitAny": true /* Raise error on expressions and declarations with an implied 'any' types. */,
    "strictNullChecks": true /* Enable strict null checks. */,
    "strictFunctionTypes": true /* Enable strict checking of function types. */,
    "strictBindCallApply": true /* Enable strict 'bind', 'call', and 'apply' methods on functions. */,
    "strictPropertyInitialization": true /* Enable strict checking of property initialization in classes. */,
    "noImplicitThis": true /* Raise error on 'this' expressions with an implied 'any' types. */,
    "alwaysStrict": true /* Parse in strict mode and emit "use strict" for each source file. */,
    "strict": true /* enable all strict type-checking options */,

    /* Additional Checks */
    "noUnusedLocals": true /* Report errors on unused locals. */,
    "noUnusedParameters": true /* Report errors on unused parameters. */,
    "noImplicitReturns": true /* Report error when not all code paths in function return a value. */,
    "noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement. */,
    "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,

    /* Module Resolution Options */
    "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
    "baseUrl": "./" /* Base directory to resolve non-absolute module names. */,

    /* Advanced Options */
    "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */,
    "paths": {
      "@/*": ["src/*"]
    }
  },
  "exclude": ["node_modules", ".vscode-test"]
}
